data$date[nSim:length(data$date)] <- ((data$date[nSim:length(data$date)] %% nSim) + 1)
rm(temp)
f.name <- as.character(unique(data$factory))
plots <- vector("list", length = length(f.name))
zeroes <- vector("list", length = length(f.name))
for (i in 1:length(f.name)) {
dat.s <- data[(data$factory == f.name[i]), 1:8]
dat.ss <- ggplot(dat)
plots[[i]] <- dat.ss
dat <- ggplot(dat[200:500, ])
zeroes[[i]] <- c(sum(dat[dat$daily_inv == 0, ]), sum(dat.s[dat.s$daily_inv == 0, ]))
names(zeroes[[i]]) <- c("Disruption", "Total Simulaiton")
print(zeroes[[i]])
pdf(paste0("C:/Users/Rob/R/SCMsim/Output/Graphics/", f.name[i], ".pdf"),
width = 11, height = 8.5, onefile = TRUE, title = f.name[i])
print(dat.ss + stat_smooth(mapping = aes(x = date, y = daily_inv),
geom = "line", col = "red") +
geom_point(aes(x = date, y = daily_inv)) +
labs(list(title = paste("Daily Inventory -", f.name[i]),
x = "Simulation Days", y = "Daily Inventory (kgs.)" )))
print(dat + stat_smooth(mapping = aes(x = date, y = daily_inv),
geom = "line", col = "red") +
geom_point(aes(x = date, y = daily_inv)) +
labs(list(title = paste("Disruption Daily Inventory -", f.name[i]),
x = "Simulation Days", y = "Daily Inventory (kgs.)" )))
print(dat.ss + stat_smooth(mapping = aes(x = date, y = in_transit),
geom = "line", col = "red") +
geom_point(aes(x = date, y = in_transit)) +
labs(list(title = paste("In Transit Inventory -", f.name[i]),
x = "Simulation Days", y = "In Transit Inventory (kgs.)" )))
print(dat.ss + stat_smooth(mapping = aes(x = date, y = forecast_err),
geom = "line", col = "red") +
geom_point(aes(x = date, y = forecast_err)) +
labs(list(title = paste("Forecast Error -", f.name[i]),
x = "Simulation Days", y = "Forecast Error (kgs.)" )))
print(dat.ss + geom_point(aes(x = date, y = forecast_err,  col = "red")) +
labs(list(title = paste("Daily Inventory & Forecast Error -", f.name[i]),
x = "Simulation Days", y = "Material (kgs.)" )) +
geom_point(aes(x = date, y = daily_inv), col = "black") +
stat_smooth(mapping = aes(x = date, y = daily_inv),
geom = "line", col = "red") +
stat_smooth(mapping = aes(x = date, y = forecast_err),
geom = "line", col = "black")
)
print(dat.ss + geom_histogram(mapping = aes(x = forecast_err, y = ..density..)) +
geom_density(aes(x = forecast_err, y = ..density..), col = "red"))
dev.off()
}
dat.s <- data[(data$factory == f.name[i]), 1:8]
library(ggplot2)
options(scipen = 10)
### if need be
# setwd("C:/Users/a421356/R-GitHub/SCMsim/Output")
data <- read.csv("TEST - quant 0.95.csv")
temp <- colnames(data)
temp[1] <- "date"
colnames(data) <- temp
data$date[nSim:length(data$date)] <- ((data$date[nSim:length(data$date)] %% nSim) + 1)
rm(temp)
f.name <- as.character(unique(data$factory))
plots <- vector("list", length = length(f.name))
zeroes <- vector("list", length = length(f.name))
for (i in 1:length(f.name)) {
dat.s <- data[(data$factory == f.name[i]), 1:8]
dat.ss <- ggplot(dat)
plots[[i]] <- dat.ss
dat <- ggplot(dat[200:500, ])
zeroes[[i]] <- c(sum(dat[dat$daily_inv == 0, ]), sum(dat.s[dat.s$daily_inv == 0, ]))
names(zeroes[[i]]) <- c("Disruption", "Total Simulaiton")
print(zeroes[[i]])
pdf(paste0("C:/Users/Rob/R/SCMsim/Output/Graphics/", f.name[i], ".pdf"),
width = 11, height = 8.5, onefile = TRUE, title = f.name[i])
print(dat.ss + stat_smooth(mapping = aes(x = date, y = daily_inv),
geom = "line", col = "red") +
geom_point(aes(x = date, y = daily_inv)) +
labs(list(title = paste("Daily Inventory -", f.name[i]),
x = "Simulation Days", y = "Daily Inventory (kgs.)" )))
print(dat + stat_smooth(mapping = aes(x = date, y = daily_inv),
geom = "line", col = "red") +
geom_point(aes(x = date, y = daily_inv)) +
labs(list(title = paste("Disruption Daily Inventory -", f.name[i]),
x = "Simulation Days", y = "Daily Inventory (kgs.)" )))
print(dat.ss + stat_smooth(mapping = aes(x = date, y = in_transit),
geom = "line", col = "red") +
geom_point(aes(x = date, y = in_transit)) +
labs(list(title = paste("In Transit Inventory -", f.name[i]),
x = "Simulation Days", y = "In Transit Inventory (kgs.)" )))
print(dat.ss + stat_smooth(mapping = aes(x = date, y = forecast_err),
geom = "line", col = "red") +
geom_point(aes(x = date, y = forecast_err)) +
labs(list(title = paste("Forecast Error -", f.name[i]),
x = "Simulation Days", y = "Forecast Error (kgs.)" )))
print(dat.ss + geom_point(aes(x = date, y = forecast_err,  col = "red")) +
labs(list(title = paste("Daily Inventory & Forecast Error -", f.name[i]),
x = "Simulation Days", y = "Material (kgs.)" )) +
geom_point(aes(x = date, y = daily_inv), col = "black") +
stat_smooth(mapping = aes(x = date, y = daily_inv),
geom = "line", col = "red") +
stat_smooth(mapping = aes(x = date, y = forecast_err),
geom = "line", col = "black")
)
print(dat.ss + geom_histogram(mapping = aes(x = forecast_err, y = ..density..)) +
geom_density(aes(x = forecast_err, y = ..density..), col = "red"))
dev.off()
}
library(ggplot2)
options(scipen = 10)
### if need be
# setwd("C:/Users/a421356/R-GitHub/SCMsim/Output")
data <- read.csv("TEST - quant 0.95.csv")
temp <- colnames(data)
temp[1] <- "date"
colnames(data) <- temp
data$date[nSim:length(data$date)] <- ((data$date[nSim:length(data$date)] %% nSim) + 1)
rm(temp)
f.name <- as.character(unique(data$factory))
plots <- vector("list", length = length(f.name))
zeroes <- vector("list", length = length(f.name))
for (i in 1:length(f.name)) {
dat.s <- data[(data$factory == f.name[i]), 1:8]
dat.ss <- ggplot(dat.s)
plots[[i]] <- dat.ss
dat <- ggplot(dat[200:500, ])
zeroes[[i]] <- c(sum(dat[dat$daily_inv == 0, ]), sum(dat.s[dat.s$daily_inv == 0, ]))
names(zeroes[[i]]) <- c("Disruption", "Total Simulaiton")
print(zeroes[[i]])
pdf(paste0("C:/Users/Rob/R/SCMsim/Output/Graphics/", f.name[i], ".pdf"),
width = 11, height = 8.5, onefile = TRUE, title = f.name[i])
print(dat.ss + stat_smooth(mapping = aes(x = date, y = daily_inv),
geom = "line", col = "red") +
geom_point(aes(x = date, y = daily_inv)) +
labs(list(title = paste("Daily Inventory -", f.name[i]),
x = "Simulation Days", y = "Daily Inventory (kgs.)" )))
print(dat + stat_smooth(mapping = aes(x = date, y = daily_inv),
geom = "line", col = "red") +
geom_point(aes(x = date, y = daily_inv)) +
labs(list(title = paste("Disruption Daily Inventory -", f.name[i]),
x = "Simulation Days", y = "Daily Inventory (kgs.)" )))
print(dat.ss + stat_smooth(mapping = aes(x = date, y = in_transit),
geom = "line", col = "red") +
geom_point(aes(x = date, y = in_transit)) +
labs(list(title = paste("In Transit Inventory -", f.name[i]),
x = "Simulation Days", y = "In Transit Inventory (kgs.)" )))
print(dat.ss + stat_smooth(mapping = aes(x = date, y = forecast_err),
geom = "line", col = "red") +
geom_point(aes(x = date, y = forecast_err)) +
labs(list(title = paste("Forecast Error -", f.name[i]),
x = "Simulation Days", y = "Forecast Error (kgs.)" )))
print(dat.ss + geom_point(aes(x = date, y = forecast_err,  col = "red")) +
labs(list(title = paste("Daily Inventory & Forecast Error -", f.name[i]),
x = "Simulation Days", y = "Material (kgs.)" )) +
geom_point(aes(x = date, y = daily_inv), col = "black") +
stat_smooth(mapping = aes(x = date, y = daily_inv),
geom = "line", col = "red") +
stat_smooth(mapping = aes(x = date, y = forecast_err),
geom = "line", col = "black")
)
print(dat.ss + geom_histogram(mapping = aes(x = forecast_err, y = ..density..)) +
geom_density(aes(x = forecast_err, y = ..density..), col = "red"))
dev.off()
}
library(ggplot2)
options(scipen = 10)
### if need be
# setwd("C:/Users/a421356/R-GitHub/SCMsim/Output")
data <- read.csv("TEST - quant 0.95.csv")
temp <- colnames(data)
temp[1] <- "date"
colnames(data) <- temp
data$date[nSim:length(data$date)] <- ((data$date[nSim:length(data$date)] %% nSim) + 1)
rm(temp)
f.name <- as.character(unique(data$factory))
plots <- vector("list", length = length(f.name))
zeroes <- vector("list", length = length(f.name))
for (i in 1:length(f.name)) {
dat.s <- data[(data$factory == f.name[i]), 1:8]
dat.ss <- ggplot(dat.s)
plots[[i]] <- dat.ss
dat <- ggplot(dat.s[200:500, ])
zeroes[[i]] <- c(sum(dat[dat$daily_inv == 0, ]), sum(dat.s[dat.s$daily_inv == 0, ]))
names(zeroes[[i]]) <- c("Disruption", "Total Simulaiton")
print(zeroes[[i]])
pdf(paste0("C:/Users/Rob/R/SCMsim/Output/Graphics/", f.name[i], ".pdf"),
width = 11, height = 8.5, onefile = TRUE, title = f.name[i])
print(dat.ss + stat_smooth(mapping = aes(x = date, y = daily_inv),
geom = "line", col = "red") +
geom_point(aes(x = date, y = daily_inv)) +
labs(list(title = paste("Daily Inventory -", f.name[i]),
x = "Simulation Days", y = "Daily Inventory (kgs.)" )))
print(dat + stat_smooth(mapping = aes(x = date, y = daily_inv),
geom = "line", col = "red") +
geom_point(aes(x = date, y = daily_inv)) +
labs(list(title = paste("Disruption Daily Inventory -", f.name[i]),
x = "Simulation Days", y = "Daily Inventory (kgs.)" )))
print(dat.ss + stat_smooth(mapping = aes(x = date, y = in_transit),
geom = "line", col = "red") +
geom_point(aes(x = date, y = in_transit)) +
labs(list(title = paste("In Transit Inventory -", f.name[i]),
x = "Simulation Days", y = "In Transit Inventory (kgs.)" )))
print(dat.ss + stat_smooth(mapping = aes(x = date, y = forecast_err),
geom = "line", col = "red") +
geom_point(aes(x = date, y = forecast_err)) +
labs(list(title = paste("Forecast Error -", f.name[i]),
x = "Simulation Days", y = "Forecast Error (kgs.)" )))
print(dat.ss + geom_point(aes(x = date, y = forecast_err,  col = "red")) +
labs(list(title = paste("Daily Inventory & Forecast Error -", f.name[i]),
x = "Simulation Days", y = "Material (kgs.)" )) +
geom_point(aes(x = date, y = daily_inv), col = "black") +
stat_smooth(mapping = aes(x = date, y = daily_inv),
geom = "line", col = "red") +
stat_smooth(mapping = aes(x = date, y = forecast_err),
geom = "line", col = "black")
)
print(dat.ss + geom_histogram(mapping = aes(x = forecast_err, y = ..density..)) +
geom_density(aes(x = forecast_err, y = ..density..), col = "red"))
dev.off()
}
library(ggplot2)
options(scipen = 10)
### if need be
# setwd("C:/Users/a421356/R-GitHub/SCMsim/Output")
data <- read.csv("TEST - quant 0.95.csv")
temp <- colnames(data)
temp[1] <- "date"
colnames(data) <- temp
data$date[nSim:length(data$date)] <- ((data$date[nSim:length(data$date)] %% nSim) + 1)
rm(temp)
f.name <- as.character(unique(data$factory))
plots <- vector("list", length = length(f.name))
zeroes <- vector("list", length = length(f.name))
for (i in 1:length(f.name)) {
dat.s <- data[(data$factory == f.name[i]), 1:8]
dat.ss <- ggplot(dat.s)
plots[[i]] <- dat.ss
dat <- ggplot(dat.s[200:500, ])
zeroes[[i]] <- c(sum((dat$daily_inv == 0)), sum((dat.s$daily_inv == 0)))
names(zeroes[[i]]) <- c("Disruption", "Total Simulaiton")
print(zeroes[[i]])
pdf(paste0("C:/Users/Rob/R/SCMsim/Output/Graphics/", f.name[i], ".pdf"),
width = 11, height = 8.5, onefile = TRUE, title = f.name[i])
print(dat.ss + stat_smooth(mapping = aes(x = date, y = daily_inv),
geom = "line", col = "red") +
geom_point(aes(x = date, y = daily_inv)) +
labs(list(title = paste("Daily Inventory -", f.name[i]),
x = "Simulation Days", y = "Daily Inventory (kgs.)" )))
print(dat + stat_smooth(mapping = aes(x = date, y = daily_inv),
geom = "line", col = "red") +
geom_point(aes(x = date, y = daily_inv)) +
labs(list(title = paste("Disruption Daily Inventory -", f.name[i]),
x = "Simulation Days", y = "Daily Inventory (kgs.)" )))
print(dat.ss + stat_smooth(mapping = aes(x = date, y = in_transit),
geom = "line", col = "red") +
geom_point(aes(x = date, y = in_transit)) +
labs(list(title = paste("In Transit Inventory -", f.name[i]),
x = "Simulation Days", y = "In Transit Inventory (kgs.)" )))
print(dat.ss + stat_smooth(mapping = aes(x = date, y = forecast_err),
geom = "line", col = "red") +
geom_point(aes(x = date, y = forecast_err)) +
labs(list(title = paste("Forecast Error -", f.name[i]),
x = "Simulation Days", y = "Forecast Error (kgs.)" )))
print(dat.ss + geom_point(aes(x = date, y = forecast_err,  col = "red")) +
labs(list(title = paste("Daily Inventory & Forecast Error -", f.name[i]),
x = "Simulation Days", y = "Material (kgs.)" )) +
geom_point(aes(x = date, y = daily_inv), col = "black") +
stat_smooth(mapping = aes(x = date, y = daily_inv),
geom = "line", col = "red") +
stat_smooth(mapping = aes(x = date, y = forecast_err),
geom = "line", col = "black")
)
print(dat.ss + geom_histogram(mapping = aes(x = forecast_err, y = ..density..)) +
geom_density(aes(x = forecast_err, y = ..density..), col = "red"))
dev.off()
}
library(ggplot2)
options(scipen = 10)
### if need be
# setwd("C:/Users/a421356/R-GitHub/SCMsim/Output")
data <- read.csv("TEST - quant 0.95.csv")
temp <- colnames(data)
temp[1] <- "date"
colnames(data) <- temp
data$date[nSim:length(data$date)] <- ((data$date[nSim:length(data$date)] %% nSim) + 1)
rm(temp)
f.name <- as.character(unique(data$factory))
plots <- vector("list", length = length(f.name))
zeroes <- vector("list", length = length(f.name))
for (i in 1:length(f.name)) {
fac <- data[(data$factory == f.name[i]), 1:8]
plots[[i]] <- ggplot(fac)
disr <- fac[200:500, ]
dat <- ggplot(disr)
zeroes[[i]] <- c(sum((disr$daily_inv == 0)), sum((fac$daily_inv == 0)))
names(zeroes[[i]]) <- c("Disruption", "Total Simulaiton")
print(zeroes[[i]])
pdf(paste0("C:/Users/Rob/R/SCMsim/Output/Graphics/", f.name[i], ".pdf"),
width = 11, height = 8.5, onefile = TRUE, title = f.name[i])
print(dat.ss + stat_smooth(mapping = aes(x = date, y = daily_inv),
geom = "line", col = "red") +
geom_point(aes(x = date, y = daily_inv)) +
labs(list(title = paste("Daily Inventory -", f.name[i]),
x = "Simulation Days", y = "Daily Inventory (kgs.)" )))
print(dat + stat_smooth(mapping = aes(x = date, y = daily_inv),
geom = "line", col = "red") +
geom_point(aes(x = date, y = daily_inv)) +
labs(list(title = paste("Disruption Daily Inventory -", f.name[i]),
x = "Simulation Days", y = "Daily Inventory (kgs.)" )))
print(dat.ss + stat_smooth(mapping = aes(x = date, y = in_transit),
geom = "line", col = "red") +
geom_point(aes(x = date, y = in_transit)) +
labs(list(title = paste("In Transit Inventory -", f.name[i]),
x = "Simulation Days", y = "In Transit Inventory (kgs.)" )))
print(dat.ss + stat_smooth(mapping = aes(x = date, y = forecast_err),
geom = "line", col = "red") +
geom_point(aes(x = date, y = forecast_err)) +
labs(list(title = paste("Forecast Error -", f.name[i]),
x = "Simulation Days", y = "Forecast Error (kgs.)" )))
print(dat.ss + geom_point(aes(x = date, y = forecast_err,  col = "red")) +
labs(list(title = paste("Daily Inventory & Forecast Error -", f.name[i]),
x = "Simulation Days", y = "Material (kgs.)" )) +
geom_point(aes(x = date, y = daily_inv), col = "black") +
stat_smooth(mapping = aes(x = date, y = daily_inv),
geom = "line", col = "red") +
stat_smooth(mapping = aes(x = date, y = forecast_err),
geom = "line", col = "black")
)
print(dat.ss + geom_histogram(mapping = aes(x = forecast_err, y = ..density..)) +
geom_density(aes(x = forecast_err, y = ..density..), col = "red"))
dev.off()
}
library(ggplot2)
options(scipen = 10)
### if need be
# setwd("C:/Users/a421356/R-GitHub/SCMsim/Output")
data <- read.csv("TEST - quant 0.95.csv")
temp <- colnames(data)
temp[1] <- "date"
colnames(data) <- temp
data$date[nSim:length(data$date)] <- ((data$date[nSim:length(data$date)] %% nSim) + 1)
rm(temp)
f.name <- as.character(unique(data$factory))
plots <- vector("list", length = length(f.name))
zeroes <- vector("list", length = length(f.name))
for (i in 1:length(f.name)) {
fac <- data[(data$factory == f.name[i]), 1:8]
plots[[i]] <- ggplot(fac)
disr <- fac[200:500, ]
dat <- ggplot(disr)
temp <- c(sum((disr$daily_inv == 0)), sum((fac$daily_inv == 0)))
temp <- c(temp, (temp[1] / temp[2]))
names(temp) <- c("Disruption", "Total Simulaiton", "Disruption Proportion")
zeroes[[i]] <- temp
print(zeroes[[i]])
pdf(paste0("C:/Users/Rob/R/SCMsim/Output/Graphics/", f.name[i], ".pdf"),
width = 11, height = 8.5, onefile = TRUE, title = f.name[i])
print(dat.ss + stat_smooth(mapping = aes(x = date, y = daily_inv),
geom = "line", col = "red") +
geom_point(aes(x = date, y = daily_inv)) +
labs(list(title = paste("Daily Inventory -", f.name[i]),
x = "Simulation Days", y = "Daily Inventory (kgs.)" )))
print(dat + stat_smooth(mapping = aes(x = date, y = daily_inv),
geom = "line", col = "red") +
geom_point(aes(x = date, y = daily_inv)) +
labs(list(title = paste("Disruption Daily Inventory -", f.name[i]),
x = "Simulation Days", y = "Daily Inventory (kgs.)" )))
print(dat.ss + stat_smooth(mapping = aes(x = date, y = in_transit),
geom = "line", col = "red") +
geom_point(aes(x = date, y = in_transit)) +
labs(list(title = paste("In Transit Inventory -", f.name[i]),
x = "Simulation Days", y = "In Transit Inventory (kgs.)" )))
print(dat.ss + stat_smooth(mapping = aes(x = date, y = forecast_err),
geom = "line", col = "red") +
geom_point(aes(x = date, y = forecast_err)) +
labs(list(title = paste("Forecast Error -", f.name[i]),
x = "Simulation Days", y = "Forecast Error (kgs.)" )))
print(dat.ss + geom_point(aes(x = date, y = forecast_err,  col = "red")) +
labs(list(title = paste("Daily Inventory & Forecast Error -", f.name[i]),
x = "Simulation Days", y = "Material (kgs.)" )) +
geom_point(aes(x = date, y = daily_inv), col = "black") +
stat_smooth(mapping = aes(x = date, y = daily_inv),
geom = "line", col = "red") +
stat_smooth(mapping = aes(x = date, y = forecast_err),
geom = "line", col = "black")
)
print(dat.ss + geom_histogram(mapping = aes(x = forecast_err, y = ..density..)) +
geom_density(aes(x = forecast_err, y = ..density..), col = "red"))
dev.off()
}
library(ggplot2)
options(scipen = 10)
### if need be
# setwd("C:/Users/a421356/R-GitHub/SCMsim/Output")
data <- read.csv("TEST - quant 0.95.csv")
temp <- colnames(data)
temp[1] <- "date"
colnames(data) <- temp
data$date[nSim:length(data$date)] <- ((data$date[nSim:length(data$date)] %% nSim) + 1)
rm(temp)
f.name <- as.character(unique(data$factory))
plots <- vector("list", length = length(f.name))
zeroes <- vector("list", length = length(f.name))
names(zeroes) <- f.name
for (i in 1:length(f.name)) {
fac <- data[(data$factory == f.name[i]), 1:8]
plots[[i]] <- ggplot(fac)
disr <- fac[200:500, ]
dat <- ggplot(disr)
temp <- c(sum((disr$daily_inv == 0)), sum((fac$daily_inv == 0)))
temp <- c(temp, round((temp[1] / temp[2]), digits = 2))
names(temp) <- c("Disruption", "Total Simulaiton", "Disruption Proportion")
zeroes[[i]] <- temp
pdf(paste0("C:/Users/Rob/R/SCMsim/Output/Graphics/", f.name[i], ".pdf"),
width = 11, height = 8.5, onefile = TRUE, title = f.name[i])
print(dat.ss + stat_smooth(mapping = aes(x = date, y = daily_inv),
geom = "line", col = "red") +
geom_point(aes(x = date, y = daily_inv)) +
labs(list(title = paste("Daily Inventory -", f.name[i]),
x = "Simulation Days", y = "Daily Inventory (kgs.)" )))
print(dat + stat_smooth(mapping = aes(x = date, y = daily_inv),
geom = "line", col = "red") +
geom_point(aes(x = date, y = daily_inv)) +
labs(list(title = paste("Disruption Daily Inventory -", f.name[i]),
x = "Simulation Days", y = "Daily Inventory (kgs.)" )))
print(dat.ss + stat_smooth(mapping = aes(x = date, y = in_transit),
geom = "line", col = "red") +
geom_point(aes(x = date, y = in_transit)) +
labs(list(title = paste("In Transit Inventory -", f.name[i]),
x = "Simulation Days", y = "In Transit Inventory (kgs.)" )))
print(dat.ss + stat_smooth(mapping = aes(x = date, y = forecast_err),
geom = "line", col = "red") +
geom_point(aes(x = date, y = forecast_err)) +
labs(list(title = paste("Forecast Error -", f.name[i]),
x = "Simulation Days", y = "Forecast Error (kgs.)" )))
print(dat.ss + geom_point(aes(x = date, y = forecast_err,  col = "red")) +
labs(list(title = paste("Daily Inventory & Forecast Error -", f.name[i]),
x = "Simulation Days", y = "Material (kgs.)" )) +
geom_point(aes(x = date, y = daily_inv), col = "black") +
stat_smooth(mapping = aes(x = date, y = daily_inv),
geom = "line", col = "red") +
stat_smooth(mapping = aes(x = date, y = forecast_err),
geom = "line", col = "black")
)
print(dat.ss + geom_histogram(mapping = aes(x = forecast_err, y = ..density..)) +
geom_density(aes(x = forecast_err, y = ..density..), col = "red"))
dev.off()
}
for (i in 1:length(zeroes)) {
print(zeroes)
}
for (i in 1:length(zeroes)) {
print(zeroes)
}
library(ggplot2)
options(scipen = 10)
### if need be
# setwd("C:/Users/a421356/R-GitHub/SCMsim/Output")
data <- read.csv("TEST - quant 0.95.csv")
temp <- colnames(data)
temp[1] <- "date"
colnames(data) <- temp
data$date[nSim:length(data$date)] <- ((data$date[nSim:length(data$date)] %% nSim) + 1)
rm(temp)
f.name <- as.character(unique(data$factory))
plots <- vector("list", length = length(f.name))
zeroes <- vector("list", length = length(f.name))
names(zeroes) <- f.name
for (i in 1:length(f.name)) {
fac <- data[(data$factory == f.name[i]), 1:8]
plots[[i]] <- ggplot(fac)
disr <- fac[200:500, ]
dat <- ggplot(disr)
temp <- c(sum((disr$daily_inv == 0)), sum((fac$daily_inv == 0)))
temp <- c(temp, round((temp[1] / temp[2]), digits = 2))
names(temp) <- c("Disruption", "Total Simulaiton", "Disruption Proportion")
zeroes[[i]] <- temp
pdf(paste0("C:/Users/Rob/R/SCMsim/Output/Graphics/", f.name[i], ".pdf"),
width = 11, height = 8.5, onefile = TRUE, title = f.name[i])
print(dat.ss + stat_smooth(mapping = aes(x = date, y = daily_inv),
geom = "line", col = "red") +
geom_point(aes(x = date, y = daily_inv)) +
labs(list(title = paste("Daily Inventory -", f.name[i]),
x = "Simulation Days", y = "Daily Inventory (kgs.)" )))
print(dat + stat_smooth(mapping = aes(x = date, y = daily_inv),
geom = "line", col = "red") +
geom_point(aes(x = date, y = daily_inv)) +
labs(list(title = paste("Disruption Daily Inventory -", f.name[i]),
x = "Simulation Days", y = "Daily Inventory (kgs.)" )))
print(dat.ss + stat_smooth(mapping = aes(x = date, y = in_transit),
geom = "line", col = "red") +
geom_point(aes(x = date, y = in_transit)) +
labs(list(title = paste("In Transit Inventory -", f.name[i]),
x = "Simulation Days", y = "In Transit Inventory (kgs.)" )))
print(dat.ss + stat_smooth(mapping = aes(x = date, y = forecast_err),
geom = "line", col = "red") +
geom_point(aes(x = date, y = forecast_err)) +
labs(list(title = paste("Forecast Error -", f.name[i]),
x = "Simulation Days", y = "Forecast Error (kgs.)" )))
print(dat.ss + geom_point(aes(x = date, y = forecast_err,  col = "red")) +
labs(list(title = paste("Daily Inventory & Forecast Error -", f.name[i]),
x = "Simulation Days", y = "Material (kgs.)" )) +
geom_point(aes(x = date, y = daily_inv), col = "black") +
stat_smooth(mapping = aes(x = date, y = daily_inv),
geom = "line", col = "red") +
stat_smooth(mapping = aes(x = date, y = forecast_err),
geom = "line", col = "black")
)
print(dat.ss + geom_histogram(mapping = aes(x = forecast_err, y = ..density..)) +
geom_density(aes(x = forecast_err, y = ..density..), col = "red"))
dev.off()
}
for (i in 1:10) {
print(zeroes)
}
